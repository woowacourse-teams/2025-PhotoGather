<configuration>
    <!-- 로그 메세지 커스텀 변환기 -->
    <conversionRule conversionWord="msg" class="com.forgather.global.logging.LogMessageConverter"/>

    <!-- yml 로그 패턴 -->
    <springProperty scope="context" name="CONSOLE_PATTERN" source="logging.pattern.console"
                    defaultValue="%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %cyan(%logger{36}) %marker %mdc %kvp %msg%n"/>
    <springProperty scope="context" name="FILE_PATTERN" source="logging.pattern.file"
                    defaultValue="%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ} %-5level %logger{36} %marker %mdc %kvp %msg%n"/>

    <!-- yml 파일 경로 -->
    <springProperty scope="context" name="FILE_PATH" source="logging.file.path" defaultValue="/var/log"/>
    <springProperty scope="context" name="FILE_NAME" source="logging.file.name" defaultValue="app"/>
    <springProperty scope="context" name="BODY_FILE_PATH" source="logging.file.body.path" defaultValue="/var/log"/>
    <springProperty scope="context" name="BODY_FILE_NAME" source="logging.file.body.name" defaultValue="body"/>
    <springProperty scope="context" name="ERROR_FILE_PATH" source="logging.file.error.path" defaultValue="/var/log"/>
    <springProperty scope="context" name="ERROR_FILE_NAME" source="logging.file.error.name" defaultValue="error"/>

    <!--콘솔 Appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${CONSOLE_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- REQUEST BODY를 제외 -->
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                <marker>BODY</marker>
            </evaluator>
            <OnMatch>DENY</OnMatch>
            <OnMismatch>ACCEPT</OnMismatch>
        </filter>
    </appender>

    <!-- 로컬 프로필 -->
    <springProfile name="local">
        <root>
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>

    <!-- 개발 프로필 -->
    <springProfile name="dev">
        <!-- 파일 Appender -->
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${FILE_PATH}/${FILE_NAME}.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${FILE_PATH}/${FILE_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>7</maxHistory>
            </rollingPolicy>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp>
                        <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                        <timeZone>Asia/Seoul</timeZone>
                    </timestamp>
                    <logLevel>
                        <fieldName>level</fieldName>
                    </logLevel>
                    <loggerName>
                        <fieldName>logger</fieldName>
                    </loggerName>
                    <logstashMarkers/>
                    <mdc/>
                    <keyValuePairs/>
                    <message>
                        <fieldName>msg</fieldName>
                    </message>
                    <stackTrace/>
                </providers>
            </encoder>
            <!-- BODY를 제외 -->
            <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
                <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                    <marker>BODY</marker>
                </evaluator>
                <OnMatch>DENY</OnMatch>
                <OnMismatch>ACCEPT</OnMismatch>
            </filter>
        </appender>

        <!-- REQUEST BODY 파일 Appender -->
        <appender name="BODY_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${BODY_FILE_PATH}/${BODY_FILE_NAME}.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${BODY_FILE_PATH}/${BODY_FILE_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>7</maxHistory>
            </rollingPolicy>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${FILE_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
            <!-- BODY 마커가 달린 로그에 대해서만 적용-->
            <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
                <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                    <marker>BODY</marker>
                </evaluator>
                <OnMatch>ACCEPT</OnMatch>
                <OnMismatch>DENY</OnMismatch>
            </filter>
        </appender>

        <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${ERROR_FILE_PATH}/${ERROR_FILE_NAME}.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${ERROR_FILE_PATH}/${ERROR_FILE_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>7</maxHistory>
            </rollingPolicy>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>error</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp>
                        <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                        <timeZone>Asia/Seoul</timeZone>
                    </timestamp>
                    <logLevel>
                        <fieldName>level</fieldName>
                    </logLevel>
                    <loggerName>
                        <fieldName>logger</fieldName>
                    </loggerName>
                    <logstashMarkers/>
                    <mdc/>
                    <keyValuePairs/>
                    <message>
                        <fieldName>msg</fieldName>
                    </message>
                    <stackTrace/>
                </providers>
            </encoder>
        </appender>
        <root>
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
            <appender-ref ref="BODY_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>

    <!-- 운영 프로필 -->
    <springProfile name="prod">
        <!-- 파일 Appender -->
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${FILE_PATH}/${FILE_NAME}.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${FILE_PATH}/${FILE_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>30</maxHistory>
            </rollingPolicy>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp>
                        <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                        <timeZone>Asia/Seoul</timeZone>
                    </timestamp>
                    <logLevel>
                        <fieldName>level</fieldName>
                    </logLevel>
                    <loggerName>
                        <fieldName>logger</fieldName>
                    </loggerName>
                    <logstashMarkers/>
                    <mdc/>
                    <keyValuePairs/>
                    <message>
                        <fieldName>msg</fieldName>
                    </message>
                    <stackTrace/>
                </providers>
            </encoder>
            <!-- BODY를 제외 -->
            <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
                <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                    <marker>BODY</marker>
                </evaluator>
                <OnMatch>DENY</OnMatch>
                <OnMismatch>ACCEPT</OnMismatch>
            </filter>
        </appender>

        <!-- REQUEST BODY 파일 Appender -->
        <appender name="BODY_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${BODY_FILE_PATH}/${BODY_FILE_NAME}.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${BODY_FILE_PATH}/${BODY_FILE_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>30</maxHistory>
            </rollingPolicy>
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>${FILE_PATTERN}</pattern>
                <charset>UTF-8</charset>
            </encoder>
            <!-- BODY 마커가 달린 로그에 대해서만 적용-->
            <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
                <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
                    <marker>BODY</marker>
                </evaluator>
                <OnMatch>ACCEPT</OnMatch>
                <OnMismatch>DENY</OnMismatch>
            </filter>
        </appender>

        <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${ERROR_FILE_PATH}/${ERROR_FILE_NAME}.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${ERROR_FILE_PATH}/${ERROR_FILE_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>30</maxHistory>
            </rollingPolicy>
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>error</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp>
                        <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZ</pattern>
                        <timeZone>Asia/Seoul</timeZone>
                    </timestamp>
                    <logLevel>
                        <fieldName>level</fieldName>
                    </logLevel>
                    <loggerName>
                        <fieldName>logger</fieldName>
                    </loggerName>
                    <logstashMarkers/>
                    <mdc/>
                    <keyValuePairs/>
                    <message>
                        <fieldName>msg</fieldName>
                    </message>
                    <stackTrace/>
                </providers>
            </encoder>
        </appender>
        <root>
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="FILE"/>
            <appender-ref ref="BODY_FILE"/>
            <appender-ref ref="ERROR_FILE"/>
        </root>
    </springProfile>

    <!-- 기타 프로필 -->
    <springProfile name="!(dev | local | prod)">
        <!-- 콘솔 출력-->
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>
</configuration>
